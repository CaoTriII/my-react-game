{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\my-react-game\\\\src\\\\app.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport fireworks from \"./fireworks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst words = [{\n  image: \"elephant.jpg\",\n  name: \"Con _oi\",\n  correctLetter: \"v\"\n}, {\n  image: \"parrot.jpg\",\n  name: \"Con _et\",\n  correctLetter: \"v\"\n}, {\n  image: \"owl.jpg\",\n  name: \"Cú _o\",\n  correctLetter: \"v\"\n}, {\n  image: \"milkfruit.jpg\",\n  name: \"_ú sữa\",\n  correctLetter: \"v\"\n}, {\n  image: \"suitcase.jpg\",\n  name: \"_ali\",\n  correctLetter: \"v\"\n}, {\n  image: \"railway.jpg\",\n  name: \"Đường _ay\",\n  correctLetter: \"r\"\n}, {\n  image: \"pulley.jpg\",\n  name: \"_òng rọc\",\n  correctLetter: \"r\"\n}];\nconst letters = [\"v\", \"r\", \"a\", \"b\", \"c\", \"d\"];\nfunction App() {\n  _s();\n  const [answers, setAnswers] = useState(Array(words.length).fill(\"\"));\n  const handleDrop = (index, letter) => {\n    const word = words[index];\n    if (letter === word.correctLetter) {\n      const newAnswers = [...answers];\n      newAnswers[index] = letter;\n      setAnswers(newAnswers);\n\n      // Hiệu ứng pháo hoa\n      const card = document.getElementById(`card-${index}`);\n      fireworks(card);\n    } else {\n      // Hiệu ứng sai\n      const card = document.getElementById(`card-${index}`);\n      card.classList.add(\"wrong\");\n      setTimeout(() => card.classList.remove(\"wrong\"), 800);\n    }\n  };\n  const handleReset = () => {\n    setAnswers(Array(words.length).fill(\"\"));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"images-container\",\n      children: words.map((word, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: `card-${index}`,\n        className: `image-card ${answers[index] ? \"correct\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `./images/${word.image}`,\n          alt: word.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name\",\n          children: word.name.replace(\"_\", answers[index] || \"_\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"letters-container\",\n      children: letters.map((letter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"letter\",\n        draggable: true,\n        onDragStart: e => e.dataTransfer.setData(\"text/plain\", letter),\n        children: letter\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset-button\",\n      onClick: handleReset,\n      children: \"Ch\\u01A1i l\\u1EA1i\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9JtRODW6r5UYQRm8xZVb9nkvA94=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","fireworks","jsxDEV","_jsxDEV","words","image","name","correctLetter","letters","App","_s","answers","setAnswers","Array","length","fill","handleDrop","index","letter","word","newAnswers","card","document","getElementById","classList","add","setTimeout","remove","handleReset","className","children","map","id","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","replace","draggable","onDragStart","e","dataTransfer","setData","onClick","_c","$RefreshReg$"],"sources":["C:/Projects/my-react-game/src/app.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport fireworks from \"./fireworks\";\r\n\r\nconst words = [\r\n  { image: \"elephant.jpg\", name: \"Con _oi\", correctLetter: \"v\" },\r\n  { image: \"parrot.jpg\", name: \"Con _et\", correctLetter: \"v\" },\r\n  { image: \"owl.jpg\", name: \"Cú _o\", correctLetter: \"v\" },\r\n  { image: \"milkfruit.jpg\", name: \"_ú sữa\", correctLetter: \"v\" },\r\n  { image: \"suitcase.jpg\", name: \"_ali\", correctLetter: \"v\" },\r\n  { image: \"railway.jpg\", name: \"Đường _ay\", correctLetter: \"r\" },\r\n  { image: \"pulley.jpg\", name: \"_òng rọc\", correctLetter: \"r\" },\r\n];\r\n\r\nconst letters = [\"v\", \"r\", \"a\", \"b\", \"c\", \"d\"];\r\n\r\nfunction App() {\r\n  const [answers, setAnswers] = useState(Array(words.length).fill(\"\"));\r\n\r\n  const handleDrop = (index, letter) => {\r\n    const word = words[index];\r\n    if (letter === word.correctLetter) {\r\n      const newAnswers = [...answers];\r\n      newAnswers[index] = letter;\r\n      setAnswers(newAnswers);\r\n\r\n      // Hiệu ứng pháo hoa\r\n      const card = document.getElementById(`card-${index}`);\r\n      fireworks(card);\r\n    } else {\r\n      // Hiệu ứng sai\r\n      const card = document.getElementById(`card-${index}`);\r\n      card.classList.add(\"wrong\");\r\n      setTimeout(() => card.classList.remove(\"wrong\"), 800);\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setAnswers(Array(words.length).fill(\"\"));\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <div className=\"images-container\">\r\n        {words.map((word, index) => (\r\n          <div\r\n            key={index}\r\n            id={`card-${index}`}\r\n            className={`image-card ${answers[index] ? \"correct\" : \"\"}`}\r\n          >\r\n            <img src={`./images/${word.image}`} alt={word.name} />\r\n            <div className=\"name\">\r\n              {word.name.replace(\"_\", answers[index] || \"_\")}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"letters-container\">\r\n        {letters.map((letter, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"letter\"\r\n            draggable\r\n            onDragStart={(e) => e.dataTransfer.setData(\"text/plain\", letter)}\r\n          >\r\n            {letter}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <button className=\"reset-button\" onClick={handleReset}>\r\n        Chơi lại\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}